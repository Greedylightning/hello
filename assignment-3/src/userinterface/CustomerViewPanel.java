/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface;

import bean.Product;
import bean.ProductCatalog;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zack
 */
public class CustomerViewPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerViewPanel
     */
    private JPanel userProcessContainer;
    private ProductCatalog productCatalog;
    
    public CustomerViewPanel(JPanel userProcessContainer,ProductCatalog productCatalog,String sign) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.productCatalog = productCatalog;
        populateTable(sign);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblView = new javax.swing.JTable();
        btnViewDetails = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        chkName = new javax.swing.JCheckBox();
        chkModelNumber = new javax.swing.JCheckBox();
        txtModelNumber = new javax.swing.JTextField();
        chkVendor = new javax.swing.JCheckBox();
        txtVendor = new javax.swing.JTextField();
        chkLowestPrice = new javax.swing.JCheckBox();
        txtLowestPrice = new javax.swing.JTextField();
        chkDescription = new javax.swing.JCheckBox();
        txtDescription = new javax.swing.JTextField();
        chkBasicPrice = new javax.swing.JCheckBox();
        txtBasicPrice = new javax.swing.JTextField();

        tblView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Model Number", "Vendor Name", "Basic Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblView);
        if (tblView.getColumnModel().getColumnCount() > 0) {
            tblView.getColumnModel().getColumn(0).setResizable(false);
            tblView.getColumnModel().getColumn(1).setResizable(false);
            tblView.getColumnModel().getColumn(2).setResizable(false);
            tblView.getColumnModel().getColumn(3).setResizable(false);
        }

        btnViewDetails.setText("View Details");
        btnViewDetails.setMaximumSize(new java.awt.Dimension(129, 29));
        btnViewDetails.setMinimumSize(new java.awt.Dimension(129, 29));
        btnViewDetails.setPreferredSize(new java.awt.Dimension(129, 29));
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        chkName.setText("Name");
        chkName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkNameActionPerformed(evt);
            }
        });

        chkModelNumber.setText("Model Number");
        chkModelNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkModelNumberActionPerformed(evt);
            }
        });

        txtModelNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelNumberActionPerformed(evt);
            }
        });

        chkVendor.setText("Vendor");
        chkVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkVendorActionPerformed(evt);
            }
        });

        txtVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVendorActionPerformed(evt);
            }
        });

        chkLowestPrice.setText("Lowest Price");
        chkLowestPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkLowestPriceActionPerformed(evt);
            }
        });

        txtLowestPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLowestPriceActionPerformed(evt);
            }
        });

        chkDescription.setText("Description");
        chkDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDescriptionActionPerformed(evt);
            }
        });

        txtDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescriptionActionPerformed(evt);
            }
        });

        chkBasicPrice.setText("Basic Price");
        chkBasicPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBasicPriceActionPerformed(evt);
            }
        });

        txtBasicPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBasicPriceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 40, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkModelNumber)
                    .addComponent(txtModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkLowestPrice)
                    .addComponent(txtLowestPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkDescription)
                    .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkVendor)
                    .addComponent(txtVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkBasicPrice)
                    .addComponent(txtBasicPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnViewDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(chkName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkModelNumber)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkLowestPrice)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLowestPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkDescription)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkVendor)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkBasicPrice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBasicPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(34, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblView.getSelectedRow();
        if(selectedRow < 0) JOptionPane.showMessageDialog(null, "Please select any row!","warning",JOptionPane.WARNING_MESSAGE);
        else{
            Product product = (Product) tblView.getValueAt(selectedRow, 0);
            CustomerViewDetailsPanel panel = new CustomerViewDetailsPanel(userProcessContainer,product);
            userProcessContainer.add("CustomerViewDetailsPanel",panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnViewDetailsActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        boolean sign = false;
        String name = txtName.getText();
        String modelNumber = txtModelNumber.getText();
        String lowestPrice = txtLowestPrice.getText();
        String description = txtDescription.getText();
        String vendor = txtVendor.getText();
        String basicPrice = txtBasicPrice.getText();
        if(chkName.isSelected()){
            //name = txtName.getText();
            if(name.isEmpty()) {
                //JOptionPane.showMessageDialog(null, "Checked boxes fields could not be empty!","warning",JOptionPane.WARNING_MESSAGE);
                sign = true;
            }
        }
        if(chkModelNumber.isSelected()){
            //modelNumber = txtModelNumber.getText();
            if(modelNumber.isEmpty()){
                //JOptionPane.showMessageDialog(null, "Checked boxes fields could not be empty!","warning",JOptionPane.WARNING_MESSAGE);
                sign = true;
            }
        }
        if(chkLowestPrice.isSelected()){
            //lowestPrice = txtLowestPrice.getText();
            if(lowestPrice.isEmpty()){
                //JOptionPane.showMessageDialog(null, "Checked boxes fields could not be empty!","warning",JOptionPane.WARNING_MESSAGE);
                sign = true;
            }
        }
        if(chkDescription.isSelected()){
            //description = txtDescription.getText();
            if(description.isEmpty()) sign = true;
        }
        if(chkVendor.isSelected()){
            //vendor = txtVendor.getText();
            if(vendor.isEmpty()) sign = true;
        }
        if(chkBasicPrice.isSelected()){
            //basicPrice = txtBasicPrice.getText();
            if(basicPrice.isEmpty()) sign = true;
        }
        
        DefaultTableModel dtm = (DefaultTableModel) tblView.getModel();
        dtm.setRowCount(0);
        if(sign) JOptionPane.showMessageDialog(null, "Checked boxes fields could not be empty!","warning",JOptionPane.WARNING_MESSAGE);
        else{
            for(Product product : productCatalog.getProductCatalog()){
                if(product.getName().equals(name) || product.getModelNumber().equals(modelNumber) || product.getFloorPrice().equals(lowestPrice) || product.getDescription().equals(description)|| product.getVendorName().equals(vendor) || product.getBasePrice().equals(basicPrice)){
                    Object[] row = new Object[4];
                    row[0] = product;
                    row[1] = product.getModelNumber();
                    row[2] = product.getVendorName();
                    row[3] = product.getBasePrice();
                    dtm.addRow(row);
                }
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtModelNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelNumberActionPerformed

    private void txtVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVendorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVendorActionPerformed

    private void txtLowestPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLowestPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLowestPriceActionPerformed

    private void txtDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescriptionActionPerformed

    private void txtBasicPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBasicPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBasicPriceActionPerformed

    private void chkModelNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkModelNumberActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_chkModelNumberActionPerformed

    private void chkNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkNameActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_chkNameActionPerformed

    private void chkLowestPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkLowestPriceActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_chkLowestPriceActionPerformed

    private void chkDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDescriptionActionPerformed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_chkDescriptionActionPerformed

    private void chkVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkVendorActionPerformed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_chkVendorActionPerformed

    private void chkBasicPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBasicPriceActionPerformed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_chkBasicPriceActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JCheckBox chkBasicPrice;
    private javax.swing.JCheckBox chkDescription;
    private javax.swing.JCheckBox chkLowestPrice;
    private javax.swing.JCheckBox chkModelNumber;
    private javax.swing.JCheckBox chkName;
    private javax.swing.JCheckBox chkVendor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblView;
    private javax.swing.JTextField txtBasicPrice;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtLowestPrice;
    private javax.swing.JTextField txtModelNumber;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtVendor;
    // End of variables declaration//GEN-END:variables

    private void populateTable(String sign) {
        DefaultTableModel dtm = (DefaultTableModel) tblView.getModel();
        dtm.setRowCount(0);
        for(Product product : productCatalog.getProductCatalog()){
            if(product.getCategory().equals(sign)){
                Object[] row = new Object[4];
                row[0] = product;
                row[1] = product.getModelNumber();
                row[2] = product.getVendorName();
                row[3] = product.getBasePrice();
                dtm.addRow(row);
            }
        }
    }
}
